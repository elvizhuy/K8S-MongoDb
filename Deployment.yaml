apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: mongo
  name: mongo
  namespace: mongodb
spec:
  #  replicas: 2
  selector:
    matchLabels:
      app: mongo
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        command: ["/bin/sh"]
        args: ["-c", "mongod --bind_ip_all --dbpath=/data/db"]
        livenessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
          #          valueFrom:
          #            secretKeyRef:
          #              name: mongodb-secret
          #              key: MONGO_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: toivaban
          #         valueFrom:
          #            secretKeyRef:
          #             name: mongodb-secret
          #              key: MONGO_ROOT_PASSWORD
        volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data/db"
        securityContext:
          runAsUser: 0
      volumes:
      - name: "mongo-data-dir"
        persistentVolumeClaim:
          claimName: "mongodb-pvc"
